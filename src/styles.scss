@import "styles.variables.scss";
*,
*::after,
*::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    min-height: 100vh;
    height: 100%;
    overflow: hidden;
    color: #FFF;
    background-color: $gray-dark;
    font-family: 'Montserrat', 'Roboto', 'Droid Sans', 'Helvetica Neue', sans-serif;
}

ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.app {
    display: grid;
    grid-template-rows: $header-height 1fr $footer-height;
    grid-template-columns: $nav-width 1fr;
    height: 100vh;
}

.header,
.footer {
    font-size: .75rem;
    font-weight: 200;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: $gray;
}

.header {
    display: flex;
    justify-content: space-between;
    grid-column: 1 / -1;
    padding: 0 $default-spacing;
    border-bottom: 1px solid rgba(#FFF, .1);
}

.footer {
    display: flex;
    align-items: center;
    grid-column: 1 / -1;
    padding: 0 $default-spacing;
    border-top: 1px solid rgba(#FFF, .1);
}

.vertical-center {
    display: flex;
    align-items: center;
}

.main {
    grid-column: 1 / -1;
    padding: $default-spacing;
    perspective: 1px;
    overflow-y: auto;
    overflow-x: hidden;
    @media screen and (min-width: 1024px) {
        grid-column: 2 / -1;
    }
}

.nav {
    display: none;
    border-right: 1px solid rgba(#FFF, .1);
    overflow-y: auto;
    ul {
        li {
            margin: 0;
            cursor: pointer;
            padding: 0 $default-spacing;
            a {
                display: block;
                padding: 1rem;
                color: #FFF;
                font-weight: 100;
            }
            &:hover,
            &:focus {
                background-color: rgba(#FFF, .035);
            }
        }
    }
    li:not(:last-child) {
        border-bottom: 1px solid rgba(#FFF, .1);
    }
    @media screen and (min-width:1024px) {
        display: block;
        grid-column: 1 / 2;
    }
}

.content-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    grid-auto-rows: minmax(150px, auto);
    grid-gap: 2rem .5rem;
    .item {
        // display: flex; // flex: 1 0 0;
        // position: relative;
        padding: $default-spacing;
        border-radius: $border-radius;
        font-size: .875rem;
        color: #FFF;
        background: pink;
        box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);
        transform: scale(1);
        transition: all .25s ease;
        filter: brightness(100%);
        &:hover,
        &:focus {
            transform: scale(1.07);
            filter: brightness(110%);
            z-index: 10;
        }
    }
}

.section-parallax {
    /* Needed for children to be absolutely positioned relative to the parent. */
    position: relative;
    /* The height of the container. Must be set, but it doesn't really matter what the value is. */
    height: 60vh;
}

.section-parallax::after {
    /* Display and position the pseudo-element */
    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    /* Move the pseudo-element back away from the camera,
     * then scale it back up to fill the viewport.
     * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
    transform: translateZ(-1px) scale(1.9);
    /* Force the background image to fill the whole element. */
    background-size: 100%;
    /* Keep the image from overlapping sibling elements. */
    z-index: -1;
    background: url('assets/img/bg_repeat_big.png');
}